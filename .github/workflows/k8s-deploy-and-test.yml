name: Kubernetes Deployment and Testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest   # Use an Ubuntu runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2   # Check out the code from GitHub

      # Install dependencies (kind, kubectl)
      - name: Install kind and kubectl
        run: |
          # Install kind
          curl -sLo /usr/local/bin/kind https://github.com/kubernetes-sigs/kind/releases/download/v0.17.0/kind-linux-amd64
          sudo chmod +x /usr/local/bin/kind
          
          # Install kubectl
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl"
          sudo chmod +x ./kubectl
          mv ./kubectl /usr/local/bin/kubectl

      # Create a Kubernetes cluster using kind
      - name: Create Kubernetes cluster
        run: |
          kind create cluster --name my-cluster

      # Set up Kubernetes context for kind cluster
      - name: Set up kubeconfig
        run: |
          export KUBEVERSION=1.21.1
          mkdir -p ~/.kube
          kind get kubeconfig --name my-cluster > ~/.kube/config

      # Deploy application to Kubernetes from yamles folder
      - name: Deploy application
        run: |
          kubectl create ns rickmorty
          kubectl apply -f yamls/Deployment.yaml
          kubectl apply -f yamls/Service.yaml

      # Wait for the app to be ready (optional, depending on the app's health check setup)
      - name: Wait for app to be ready
        run: |
          kubectl wait --for=condition=available --timeout=300s deployment/rickmorty

      # Test application endpoint
      - name: Test application endpoint
        run: |
          curl --retry 5 --retry-delay 5 --max-time 60 http://localhot:5000/healthcheck
